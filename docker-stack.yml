version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tourism_network
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 3
        window: 300s
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  auth-service:
    image: tourism-platform-auth-service:latest
    environment:
      SECRET_KEY: "tourism-platform-secret-key-2024-production-ready"
      JWT_ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES: "30"
      DATABASE_URL: "postgresql://admin:password@postgres:5432/auth_db"
      HEALTH_CHECK_HOST: "localhost"
    ports:
      - "8000:8000"
    networks:
      - tourism_network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 3
        window: 300s
      update_config:
        parallelism: 1
        delay: 20s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  tours-service:
    image: tourism-platform-tours-service:latest
    environment:
      DATABASE_URL: "postgresql://admin:password@postgres:5432/tours_db"
      SECRET_KEY: "tourism-platform-secret-key-2024-production-ready"
      JWT_ALGORITHM: "HS256"
      HEALTH_CHECK_HOST: "localhost"
    ports:
      - "8001:8001"
    networks:
      - tourism_network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 3
        window: 300s
      update_config:
        parallelism: 1
        delay: 20s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  booking-service:
    image: tourism-platform-booking-service:latest
    environment:
      DATABASE_URL: "postgresql://admin:password@postgres:5432/booking_db"
      SECRET_KEY: "tourism-platform-secret-key-2024-production-ready"
      JWT_ALGORITHM: "HS256"
      AUTH_SERVICE_URL: "http://auth-service:8000"
      TOURS_SERVICE_URL: "http://tours-service:8001"
      HEALTH_CHECK_HOST: "localhost"
    ports:
      - "8002:8002"
    networks:
      - tourism_network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 20s
        max_attempts: 3
        window: 300s
      update_config:
        parallelism: 1
        delay: 25s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  frontend:
    image: tourism-platform-frontend:latest
    ports:
      - "8080:80"
    networks:
      - tourism_network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 300s
      update_config:
        parallelism: 2
        delay: 10s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 5s
        failure_action: pause
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    driver: local

networks:
  tourism_network:
    driver: overlay