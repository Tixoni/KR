apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: tourism
spec:
  selector:
    app: auth-service
  ports:
  - name: http
    port: 8000
    targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: tourism
spec:
  replicas: 3
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: tourism-platform-auth-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: SECRET_KEY
        - name: JWT_ALGORITHM
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: JWT_ALGORITHM
        - name: ACCESS_TOKEN_EXPIRE_MINUTES
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: ACCESS_TOKEN_EXPIRE_MINUTES
        - name: DATABASE_URL
          value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/auth_db
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: POSTGRES_PASSWORD
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: tours-service
  namespace: tourism
spec:
  selector:
    app: tours-service
  ports:
  - name: http
    port: 8001
    targetPort: 8001
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tours-service
  namespace: tourism
spec:
  replicas: 3
  selector:
    matchLabels:
      app: tours-service
  template:
    metadata:
      labels:
        app: tours-service
    spec:
      containers:
      - name: tours-service
        image: tourism-platform-tours-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8001
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: SECRET_KEY
        - name: JWT_ALGORITHM
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: JWT_ALGORITHM
        - name: DATABASE_URL
          value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/tours_db
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: POSTGRES_PASSWORD
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 20
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: booking-service
  namespace: tourism
spec:
  selector:
    app: booking-service
  ports:
  - name: http
    port: 8002
    targetPort: 8002
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: booking-service
  namespace: tourism
spec:
  replicas: 2
  selector:
    matchLabels:
      app: booking-service
  template:
    metadata:
      labels:
        app: booking-service
    spec:
      containers:
      - name: booking-service
        image: tourism-platform-booking-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8002
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: SECRET_KEY
        - name: JWT_ALGORITHM
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: JWT_ALGORITHM
        - name: DATABASE_URL
          value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/booking_db
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: platform-secrets
              key: POSTGRES_PASSWORD
        - name: AUTH_SERVICE_URL
          value: http://auth-service.tourism.svc.cluster.local:8000
        - name: TOURS_SERVICE_URL
          value: http://tours-service.tourism.svc.cluster.local:8001
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 20
          periodSeconds: 20
